[THEWATCH_format_signatures]
definition = ``` Extract qualification key from name ```\
	| rex field=title "thewatchQ?_P\d+_\d+-(?<qualification_key>[^_]+)_(?<qualification_label_id>[^_]+)"\
	``` Get elements from the description ```\
	| spath input=description path=details output=details\
	| spath input=description path=reference_number output=reference_number\
	| spath input=description path=time output=last_update\
	| spath input=description path=author output=author\
	| spath input=description path=tag_id output=tag_id\
	| lookup thewatch_tags id as tag_id OUTPUTNEW name as tag_name, type as tag_type\
	| lookup thewatch_qualification_labels id AS qualification_label_id OUTPUTNEW name as qualification_label_name\
	| fillnull value="Undefined" author\
	| eval id = if(isnull(id),title,id), last_update = strftime(round(last_update/1000),"%F %T"), tag_name = tag_name+" ("+tag_type+")"\
	| table id, title, tag_name, search, author, description, priority, tags, details, reference_number, qualification_label_name, tag_id, last_update\
	| rename author as "Author", tag_name as "Related Tag", search as "Search", title as "Name", description as "Description", priority as "Priority", tags as "Tags", details as "Comment", qualification_label_name as "Qualification", last_update as "Last update", reference_number as "Reference Number"
iseval = 0

[THEWATCH_find_notable_events(1)]
definition = ((thewatch_artifact_$type$!="") sourcetype!="stash_action_thewatch_notable_event-too_small") OR (sourcetype="stash_thewatchv2_notable_events")\
	``` Merge findings ```\
	| eval thewatch_artifact = mvappend(thewatch_artifact_sourcetype,thewatch_artifact_event_id,thewatch_artifact_file_name,thewatch_artifact_user,thewatch_artifact_ip,thewatch_artifact_mail,thewatch_artifact_url,thewatch_artifact_hash,thewatch_artifact_workstation), thewatch_artifact_status = mvappend(thewatch_artifact_sourcetype_status,thewatch_artifact_file_name_status,thewatch_artifact_event_id_status,thewatch_artifact_user_status,thewatch_artifact_ip_status,thewatch_artifact_mail_status,thewatch_artifact_url_status,thewatch_artifact_hash_status,thewatch_artifact_workstation_status), thewatch_artifact_id = mvappend(thewatch_artifact_sourcetype_id,thewatch_artifact_event_id_id,thewatch_artifact_file_name_id,thewatch_artifact_user_id,thewatch_artifact_ip_id,thewatch_artifact_mail_id,thewatch_artifact_url_id,thewatch_artifact_hash_id,thewatch_artifact_workstation_id), thewatch_artifact_case_id = mvappend(thewatch_artifact_sourcetype_case_id,thewatch_artifact_event_id_case_id,thewatch_artifact_file_name_case_id,thewatch_artifact_user_case_id,thewatch_artifact_ip_case_id,thewatch_artifact_mail_case_id,thewatch_artifact_url_case_id,thewatch_artifact_hash_case_id,thewatch_artifact_workstation_case_id)\
	``` Remove already processed events ```\
	| eval thewatch_event_id = if(isnull(thewatch_event_id),sha1(_raw),thewatch_event_id), thewatch_alert_time = relative_time(now(),"-1min@min")\
	| eventstats dc(thewatch_sid) as thewatch_sid by thewatch_event_id\
	| fillnull value="0" thewatch_sid\
	| where thewatch_sid=0\
	``` From this point, we are processing only new events (indexed recently over 12 hours) ```\
	``` Enrich data to check if an alert already exists ```\
	| mvexpand thewatch_artifact_case_id\
	| lookup thewatch_cases id as thewatch_artifact_case_id OUTPUTNEW tag_id as thewatch_artifact_tag_id severity_levels_id as thewatch_case_severity_levels_id\
	| lookup thewatch_ongoing_alerts case_id as thewatch_artifact_case_id OUTPUTNEW id as thewatch_alert_id\
	| appendpipe [\
	``` Parallel processing of the alert id generation, here we are processing new alerts ```\
	| fillnull value="None" thewatch_alert_id\
	| stats values(thewatch_alert_time) as time by thewatch_alert_id, thewatch_artifact_case_id\
	| eval id = if(thewatch_alert_id=="None",sha1(time+thewatch_artifact_case_id),thewatch_alert_id)\
	| rename thewatch_artifact_case_id as case_id\
	| outputlookup append=true thewatch_ongoing_alerts\
	``` Little trick to keep none result ```\
	| where isnull(id)]\
	``` Build the alert - If an alert already exists, keep the existing alert_id, otherwise create a new one (already registered in the thewatch_ongoing_alerts lookup ```\
	| eval thewatch_alert_id = if(isnull(thewatch_alert_id),sha1(thewatch_alert_time+thewatch_artifact_case_id),thewatch_alert_id)\
	| where isnotnull(thewatch_alert_id)\
	| fields - thewatch_sid rid RID
args = type
iseval = 0

[THEWATCH_find_notable_events(2)]
definition = (`$macro_search$` (thewatch_artifact_$type$!="") sourcetype!="stash_action_thewatch_notable_event-too_small") OR (sourcetype="stash_thewatchv2_notable_events")\
	``` Merge findings ```\
	| eval thewatch_artifact = mvappend(thewatch_artifact_sourcetype,thewatch_artifact_event_id,thewatch_artifact_file_name,thewatch_artifact_user,thewatch_artifact_ip,thewatch_artifact_mail,thewatch_artifact_url,thewatch_artifact_hash,thewatch_artifact_workstation), thewatch_artifact_status = mvappend(thewatch_artifact_sourcetype_status,thewatch_artifact_file_name_status,thewatch_artifact_event_id_status,thewatch_artifact_user_status,thewatch_artifact_ip_status,thewatch_artifact_mail_status,thewatch_artifact_url_status,thewatch_artifact_hash_status,thewatch_artifact_workstation_status), thewatch_artifact_id = mvappend(thewatch_artifact_sourcetype_id,thewatch_artifact_event_id_id,thewatch_artifact_file_name_id,thewatch_artifact_user_id,thewatch_artifact_ip_id,thewatch_artifact_mail_id,thewatch_artifact_url_id,thewatch_artifact_hash_id,thewatch_artifact_workstation_id), thewatch_artifact_case_id = mvappend(thewatch_artifact_sourcetype_case_id,thewatch_artifact_event_id_case_id,thewatch_artifact_file_name_case_id,thewatch_artifact_user_case_id,thewatch_artifact_ip_case_id,thewatch_artifact_mail_case_id,thewatch_artifact_url_case_id,thewatch_artifact_hash_case_id,thewatch_artifact_workstation_case_id)\
	``` Remove already processed events ```\
	| eval thewatch_event_id = if(isnull(thewatch_event_id),sha1(_raw),thewatch_event_id), thewatch_alert_time = relative_time(now(),"-1min@min")\
	| eventstats dc(thewatch_sid) as thewatch_sid by thewatch_event_id\
	| fillnull value="0" thewatch_sid\
	| where thewatch_sid=0\
	``` From this point, we are processing only new events (indexed recently over 12 hours) ```\
	``` Enrich data to check if an alert already exists ```\
	| mvexpand thewatch_artifact_case_id\
	| lookup thewatch_cases id as thewatch_artifact_case_id OUTPUTNEW tag_id as thewatch_artifact_tag_id severity_levels_id as thewatch_case_severity_levels_id\
	| lookup thewatch_ongoing_alerts case_id as thewatch_artifact_case_id OUTPUTNEW id as thewatch_alert_id\
	| appendpipe [\
	``` Parallel processing of the alert id generation, here we are processing new alerts ```\
	| fillnull value="None" thewatch_alert_id\
	| stats values(thewatch_alert_time) as time by thewatch_alert_id, thewatch_artifact_case_id\
	| eval id = if(thewatch_alert_id=="None",sha1(time+thewatch_artifact_case_id),thewatch_alert_id)\
	| rename thewatch_artifact_case_id as case_id\
	| outputlookup append=true thewatch_ongoing_alerts\
	``` Little trick to keep none result ```\
	| where isnull(id)]\
	``` Build the alert - If an alert already exists, keep the existing alert_id, otherwise create a new one (already registered in the thewatch_ongoing_alerts lookup ```\
	| eval thewatch_alert_id = if(isnull(thewatch_alert_id),sha1(thewatch_alert_time+thewatch_artifact_case_id),thewatch_alert_id)\
	| where isnotnull(thewatch_alert_id)\
	| fields - thewatch_sid rid RID
args = macro_search, type
iseval = 0

[THEWATCH_get_notable_events(4)]
definition = sourcetype="stash_thewatchv2_notable_events" thewatch_artifact IN ($artifact$) thewatch_case_name="$case_name$" thewatch_tag_name IN ($tag_name$)\
	| fields *\
	``` Merging information from The Watch events```\
	| eval thewatch_artifact_description = mvappend(thewatch_artifact_file_name_description,thewatch_artifact_hash_description,thewatch_artifact_ip_description,thewatch_artifact_mail_description,thewatch_artifact_event_id_description,thewatch_artifact_sourcetype_description,thewatch_artifact_url_description,thewatch_artifact_user_description,thewatch_artifact_workstation_description), thewatch_artifact_confidence_level = mvappend(thewatch_artifact_file_name_confidence_level,thewatch_artifact_hash_confidence_level,thewatch_artifact_ip_confidence_level,thewatch_artifact_mail_confidence_level,thewatch_artifact_event_id_confidence_level,thewatch_artifact_sourcetype_confidence_level,thewatch_artifact_url_confidence_level,thewatch_artifact_user_confidence_level,thewatch_artifact_workstation_confidence_level), thewatch_artifact_status = mvappend(thewatch_artifact_file_name_status,thewatch_artifact_hash_status,thewatch_artifact_ip_status,thewatch_artifact_mail_status,thewatch_artifact_event_id_status,thewatch_artifact_sourcetype_status,thewatch_artifact_url_status,thewatch_artifact_user_status,thewatch_artifact_workstation_status)\
	``` Enrichment of The Watch events```\
	| eval thewatch_enrichment_source = mvappend(tw_enrichment_source_dest_ip,tw_enrichment_source_ip,tw_enrichment_source_src_ip,tw_enrichment_source_user), thewatch_enrichment_type = mvappend(tw_enrichment_type_dest_ip,tw_enrichment_type_ip,tw_enrichment_type_src_ip,tw_enrichment_type_user), thewatch_enrichment_description = mvappend(tw_enrichment_description_dest_ip,tw_enrichment_description_ip,tw_enrichment_description_src_ip,tw_enrichment_description_user), thewatch_enrichment_score = mvappend(tw_enrichment_score_dest_ip,tw_enrichment_score_ip,tw_enrichment_score_src_ip,tw_enrichment_score_user)\
	`THEWATCH_add_nearest_qualification()`\
	| search thewatch_nearest_qualification_name="$qualification$"
args = tag_name, case_name, artifact, qualification
iseval = 0

[THEWATCH_get_detections_by_case_qualification_by_id(4)]
args = tag_id, case_id, artifact_id, qualification
definition = `THEWATCH_get_notable_events_by_id($tag_id$,$case_id$,$artifact_id$,$qualification$)`\
	| where thewatch_case_aggregation=="case_qualification"\
	| eventstats earliest(_time) as earliest_event_time, latest(_time) as latest_event_time by thewatch_artifact_case_id, thewatch_nearest_qualification_id\
	| eval thewatch_tag_name = mvzip(thewatch_tag_name,thewatch_tag_type," - "), thewatch_enrichment_name = thewatch_enrichment_description+" ("+thewatch_enrichment_type+")"\
	| fillnull value="-" thewatch_enrichment_name\
	| stats values(thewatch_artifact) as thewatch_artifact, values(thewatch_enrichment_name) as thewatch_enrichment_name, count as total by thewatch_artifact_case_id, thewatch_artifact_tag_id, thewatch_tag_name, thewatch_nearest_qualification_id, thewatch_nearest_qualification_name, earliest_event_time, latest_event_time\
	| lookup thewatch_cases id as thewatch_artifact_case_id OUTPUTNEW name as thewatch_case_name\
	| sort 0 -latest_event_time\
	| eval thewatch_evt = relative_time(earliest_event_time,"-1min"), thewatch_lvt = relative_time(latest_event_time,"+1min"), earliest_event_time = strftime(earliest_event_time,"%Y-%m-%d %H:%M:%S"), latest_event_time = strftime(latest_event_time,"%Y-%m-%d %H:%M:%S"), thewatch_enrichment_name = if(mvcount(thewatch_enrichment_name)!=1,mvfilter(NOT match(thewatch_enrichment_name,"^\-$")),thewatch_enrichment_name)\
	| table thewatch_artifact_case_id, thewatch_nearest_qualification_id, thewatch_artifact_tag_id, thewatch_case_name, thewatch_nearest_qualification_name, earliest_event_time, latest_event_time, thewatch_tag_name, thewatch_artifact, thewatch_enrichment_name, total, thewatch_evt, thewatch_lvt
iseval = 0

[THEWATCH_get_notable_events_by_id(4)]
definition = sourcetype="stash_thewatchv2_notable_events" thewatch_artifact_id IN ($artifact_id$) thewatch_artifact_case_id IN ($case_id$) thewatch_artifact_tag_id IN ($tag_id$)\
	| fields *\
	``` Merging information from The Watch events```\
	| eval thewatch_artifact_description = mvappend(thewatch_artifact_file_name_description,thewatch_artifact_hash_description,thewatch_artifact_ip_description,thewatch_artifact_mail_description,thewatch_artifact_event_id_description,thewatch_artifact_sourcetype_description,thewatch_artifact_url_description,thewatch_artifact_user_description,thewatch_artifact_workstation_description), thewatch_artifact_confidence_level = mvappend(thewatch_artifact_file_name_confidence_level,thewatch_artifact_hash_confidence_level,thewatch_artifact_ip_confidence_level,thewatch_artifact_mail_confidence_level,thewatch_artifact_event_id_confidence_level,thewatch_artifact_sourcetype_confidence_level,thewatch_artifact_url_confidence_level,thewatch_artifact_user_confidence_level,thewatch_artifact_workstation_confidence_level), thewatch_artifact_status = mvappend(thewatch_artifact_file_name_status,thewatch_artifact_hash_status,thewatch_artifact_ip_status,thewatch_artifact_mail_status,thewatch_artifact_event_id_status,thewatch_artifact_sourcetype_status,thewatch_artifact_url_status,thewatch_artifact_user_status,thewatch_artifact_workstation_status)\
	``` Enrichment of The Watch events```\
	| eval thewatch_enrichment_source = mvappend(tw_enrichment_source_dest_ip,tw_enrichment_source_ip,tw_enrichment_source_src_ip,tw_enrichment_source_user), thewatch_enrichment_type = mvappend(tw_enrichment_type_dest_ip,tw_enrichment_type_ip,tw_enrichment_type_src_ip,tw_enrichment_type_user), thewatch_enrichment_description = mvappend(tw_enrichment_description_dest_ip,tw_enrichment_description_ip,tw_enrichment_description_src_ip,tw_enrichment_description_user), thewatch_enrichment_score = mvappend(tw_enrichment_score_dest_ip,tw_enrichment_score_ip,tw_enrichment_score_src_ip,tw_enrichment_score_user)\
	`THEWATCH_add_nearest_qualification()`\
	| search thewatch_nearest_qualification_name IN ($qualification$)
args = tag_id, case_id, artifact_id, qualification
iseval = 0

[THEWATCH_format_cases]
definition = | eval updated = strftime(updated,"%Y-%m-%d"), aggregation = case(aggregation=="case_qualification","Case + Qualification",aggregation=="alert","Alert",1==1,"#Error")\
	| lookup thewatch_tags id as tag_id OUTPUTNEW name as tag_name, type as tag_type\
	| eval tag_name = tag_name+" ("+tag_type+")"\
	| fillnull value="-" tag_name\
	| lookup thewatch_severity_levels id as severity_levels_id OUTPUTNEW name as severity_levels_name\
	| sort 0 -updated\
	| table id, name, description, tag_id, tag_name, aggregation, severity_levels_name, severity_levels_id, updated\
	| rename id as ID, name as "Name", description as "Description", tag_name as "Tags", aggregation as "Aggregation", severity_levels_name as "Severity Levels", updated as "Updated"
iseval = 0

[THEWATCH_format_cases_edit]
definition = | eval updated = strftime(updated,"%Y-%m-%d"), aggregation = case(aggregation=="case_qualification","Case + Qualification",aggregation=="alert","Alert",1==1,"#Error")\
	| lookup thewatch_tags id as tag_id OUTPUTNEW name as tag_name, type as tag_type\
	| eval tag_name = tag_name+" ("+tag_type+")"\
	| fillnull value="-" tag_name\
	| lookup thewatch_severity_levels id as severity_levels_id OUTPUTNEW name as severity_levels_name\
	| sort 0 -updated\
	| table id, name, description, tag_id, tag_name, aggregation, severity_levels_name, severity_levels_id, updated\
	| rename id as ID, name as "Name", description as "Description", tag_name as "Tags", aggregation as "Aggregation", severity_levels_name as "Severity Levels", updated as "Updated"
iseval = 0

[THEWATCH_detected_events(3)]
args = type, tag, sid
definition = case(type=="loadjob","loadjob $sid$",1==1,"search sourcetype="stash_thewatchv2_notable_events" soc_artifact_tags=$tag$")
iseval = 1
errormsg = The first parameter must be "search" or "loadjob". Then you have to provide a tag or a SID
validation = (tag!="" OR (type=="loadjob" AND sid!=""))

[THEWATCH_EDIT_Mutualize_action_field]
definition = | eval action = case(action IN ("Accept","Allow","allowed","ALERT","DELIVERED"),"Allowed",action IN ("Drop","Prevent","dropped","blocked","BLOCK","DROPPED"),"Blocked",isnotnull(action),action,1=1,"None")
iseval = 0

[THEWATCH_ADD_thewatch_artifact_matched_fields]
definition = | fields - tag* - sub-component \
	| eval original_sourcetype = coalesce(orig_sourcetype,sourcetype)\
	| join type=left original_sourcetype\
	[| rest servicesNS/-/-/data/props/lookups\
	| rename eai:acl.app as app\
	| where match(app,"TA-ak_thewatch") AND match(attribute,"^LOOKUP-THEWATCH.*")\
	| rex field=value "thewatch_artifact_(?<type>[^ ]+) artifact AS (?<field>[^ ]+)"\
	| eval field_type = replace(replace(field,"\"",""),"sourcetype","orig_sourcetype")+"::"+type\
	| stats values(field_type) as fields_types by stanza\
	| eval fields_types = mvjoin(fields_types,";;"), global_fields_types = if(stanza=="default",fields_types,null())\
	| eventstats values(global_fields_types) as global_fields_types\
	| eval global_fields_types = mvjoin(global_fields_types,";;"), fields_types = fields_types+";;"+global_fields_types\
	| table stanza, fields_types\
	| rename stanza as "original_sourcetype"]\
	| makemv delim=";;" fields_types\
	| eval thewatch_artifact_matched_fields = ""\
	| foreach *\
	[eval filter_field = mvfilter(match(fields_types,"<<FIELD>>"+"::")), thewatch_artifact_matched_fields = thewatch_artifact_matched_fields+if((mvcount(filter_field) > 0) AND (match('<<FIELD>>',replace(thewatch_artifact,"\*",".*")) OR cidrmatch(thewatch_artifact,'<<FIELD>>')),upper(mvindex(split(filter_field,"::"),1))+":::"+"<<FIELD>>"+"==="+'<<FIELD>>'+";;;","")]\
	| fields - fields_types - original_sourcetype \
	| makemv delim=";;;" thewatch_artifact_matched_fields\
	| fillnull value="None" thewatch_artifact_matched_fields
iseval = 0

[THEWATCH_format_artifacts]
definition = | where artifact!="-"\
	| eval start_date = strftime(start_date,"%Y-%m-%d"), next_date= if(end_date<=now(),"🛑 Will be removed after: "+strftime(remove_date,"%Y-%m-%d"),"⏳ Will be disabled after: "+strftime(end_date,"%Y-%m-%d")), confidence_level_value = confidence_level, confidence_level = case(confidence_level=="0.238","LOW",confidence_level=="0.382","MEDIUM",confidence_level=="0.618","HIGH",confidence_level=="1","ABSOLUTE"), status = case(status=1,"ACTIVE",status=0,"INACTIVE",1=1,"Unknown")\
	| lookup thewatch_cases id as case_id OUTPUTNEW name as case_name\
	| fillnull value="-" case_name\
	| table id, artifact, start_date, next_date, case_id, case_name, description, confidence_level, status, tlp, confidence_level_value\
	| rename artifact as "Artifact", start_date as "Start Date", next_date as "Next Date", remove_date as "Remove Date", case_name as "Case", description as Description, confidence_level as "Confidence Level", tlp as "TLP", status as "Status"
iseval = 0

[THEWATCH_audit_event(4)]
args = lookup_type, user, action, audit_event
definition = | appendpipe \
	[| where start_date>=relative_time(now(),"-5s") OR updated>=relative_time(now(),"-5s")\
	| eval _time = coalesce(updated,start_date), type=upper(replace("$lookup_type$","(?i:thewatch_(?:admin_)?artifact_)","")), action="$action$", user="$user$", audit_event = "$audit_event$"\
	| summaryindex index=main\
	| where isnull(audit_event)\
	| table *]
iseval = 0

[THEWATCH_audit_event(7)]
args = id,case_id,changeby,lookup_type, user, action, audit_event
definition = | appendpipe \
	[| where (("$changeby$"=="bycase" OR id=="$id$") AND case_id=="$case_id$")\
	| eval _time = now(), type=upper(replace("$lookup_type$","(?i:thewatch_(?:admin_)?artifact_)","")), action="$action$", user="$user$", audit_event = "$audit_event$"\
	| summaryindex index=main\
	| where isnull(audit_event)\
	| table *]
iseval = 0

[THEWATCH_format_artifacts_edit]
definition = | where artifact!="-"\
	| eval start_date = strftime(start_date,"%Y-%m-%d"), next_date= if(end_date<=now(),"🛑 Will be removed after: "+strftime(remove_date,"%Y-%m-%d"),"⏳ Will be disabled after: "+strftime(end_date,"%Y-%m-%d")), confidence_level_value = confidence_level, tlp = tlp, confidence_level = case(confidence_level=="0.238","LOW",confidence_level=="0.382","MEDIUM",confidence_level=="0.618","HIGH",confidence_level=="1","ABSOLUTE"), status = case(status=1,"ACTIVE",status=0,"INACTIVE",1=1,"Unknown")\
	| lookup thewatch_cases id as case_id OUTPUTNEW name as case_name, id as case_id_short\
	| rex field=case_id_short mode=sed "s/(\w{8}).*/\1/g"\
	| eval case_name = mvzip(case_id_short,case_name,": ")\
	| rex field=case_name mode=sed "s/$/ ❌/g"\
	| fillnull value="-" case_name\
	| table id, artifact, start_date, next_date, case_id, case_name, description, confidence_level, tlp, status, end_date, remove_date, confidence_level_value, tlp_value\
	| rename artifact as "Artifact", start_date as "Start Date", next_date as "Next Date", case_name as "Case", description as Description, confidence_level as "Confidence Level", tlp as "TLP", status as "Status"
iseval = 0

[THEWATCH_format_qualification_labels]
definition = | lookup thewatch_qualification_sets id AS set_id OUTPUTNEW name as set_name\
	| sort 0 priority, key\
	| eval score = if(score>0,"+"+score,score)\
	| table id, key, priority, name, description, color, score, set_id, set_name\
	| rename name as "Name", description as "Description", priority as "Priority", color as "Color", score as "Score", set_name as "Set membership"
iseval = 0

[THEWATCH_format_qualification_labels_edit]
definition = | eval action = "➕ Add membership to the set", score = if(score>0,"+"+score,score)\
	| lookup thewatch_qualification_sets id AS set_id OUTPUTNEW name as set_name\
	| rex field=set_id mode=sed "s/(\w{8}).*/\1/g"\
	| rex field=set_name mode=sed "s/$/ ❌/g"\
	| eval set_name = mvzip(set_id,set_name,": ")\
	| sort 0 priority key\
	| table id, key, priority, name, description, color, score, set_id, set_name, action\
	| rename name as "Name", description as "Description", priority as "Priority", color as "Color", score as "Score", set_name as "Set membership", action as "Action"
iseval = 0

[THEWATCH_format_tags]
definition = | eval score = if(score>0,"+"+score,score)\
	| lookup thewatch_qualification_sets id AS set_id OUTPUTNEW name as set_name\
	| sort 0 type name\
	| table id, name, type, default_score_new_qualification, set_id, set_name\
	| rename name as "Name", type as "Type", default_score_new_qualification as "Default score for NEW qualification", set_name as "Qualification set used"
iseval = 0

[THEWATCH_format_enrichment_database]
definition = | eval score = if(score>0,"+"+score,score)\
	| sort 0 value\
	| table id, source, value, type, description, score\
	| rename source as "Source", value as "Value", type as "Type", description as "Description", score as "Score"
iseval = 0

[THEWATCH_add_nearest_qualification]
definition = | eval eventtype = mvfilter(match(eventtype,"thewatchQ_.*")), thewatch_nearest_eventtype = if(isnotnull(eventtype) AND mvcount(eventtype)>0,mvindex(eventtype,0),"None")\
	| rex field=thewatch_nearest_eventtype "thewatchQ_(?<thewatch_nearest_priority>P\d)_\d+\-\w+_(?<nearest_qualification_id>[^_]+)_.*"\
	| rename nearest_qualification_id as thewatch_nearest_qualification_id\
	| fillnull value="None" thewatch_nearest_qualification_id\
	| lookup thewatch_qualification_labels id as thewatch_nearest_qualification_id OUTPUTNEW name as thewatch_nearest_qualification_name score as thewatch_nearest_qualification_score\
	| eval thewatch_nearest_qualification_name = if(thewatch_nearest_qualification_id=="None","NEW",thewatch_nearest_qualification_name), thewatch_nearest_qualification_score = if(thewatch_nearest_qualification_id=="None",thewatch_tag_default_score_new_qualification,thewatch_nearest_qualification_score)
iseval = 0

[THEWATCH_get_notable_events]
definition = `THEWATCH_get_notable_events(*,*,*,*)`
iseval = 0

[THEWATCH_get_notable_events_by_tag(1)]
args = tag_name
definition = `THEWATCH_get_notable_events($tag_name$,*,*,*)`
iseval = 0

[THEWATCH_get_audit_events]
definition = index=main sourcetype="stash_thewatchv2_notable_events" audit_event!=""
iseval = 0

[THEWATCH_format_severity_levels]
definition = | eval score_limit_critical = ">= "+score_limit_high\
	| table id, name, score_limit_low, score_limit_medium, score_limit_high, score_limit_critical\
	| rename name as "Name", score_limit_low as "LOW", score_limit_medium as "MEDIUM", score_limit_high as "HIGH", score_limit_critical as "CRITICAL"
iseval = 0

[THEWATCH_calculate_alert_severity(1)]
args = global_score_field
definition = | lookup thewatch_cases id as thewatch_artifact_case_id OUTPUTNEW name as thewatch_case_name severity_levels_id as thewatch_case_severity_levels_id\
	| lookup thewatch_severity_levels id as thewatch_case_severity_levels_id OUTPUTNEW score_limit_low as thewatch_case_severity_limit_low score_limit_medium as thewatch_case_severity_limit_medium score_limit_high as thewatch_case_severity_limit_high\
	| eval thewatch_alert_severity = case($global_score_field$<thewatch_case_severity_limit_low,"LOW",$global_score_field$<thewatch_case_severity_limit_medium,"MEDIUM",$global_score_field$<thewatch_case_severity_limit_high,"HIGH",1==1,"CRITICAL")
iseval = 0

[THEWATCH_format_log_fields]
definition = | rename thewatch_case_name as "Case", thewatch_tag_name as "Related Tag", thewatch_artifact as "Artifacts", thewatch_nearest_qualification_name as "Current Qualification", total as "#Events", earliest_event_time as "Earliest event time", latest_event_time as "Latest event time", status as "Status", thewatch_alert_severity as "Severity", global_score as "Global Score", thewatch_enrichment_name as "Additional enrichment(s)", current_qualifications as "Events Qualifications", thewatch_artifact_match_fields as "Which fields?", thewatch_nearest_qualification_score as "Qualification Score"
iseval = 0

[THEWATCH_get_detections_by_alert(4)]
args = tag_name, case_name, artifact_value, qualification
definition = `THEWATCH_get_notable_events($tag_name$,$case_name$,$artifact_value$,$qualification$)`\
	| where thewatch_case_aggregation=="alert"\
	| eventstats earliest(_time) as earliest_event_time, latest(_time) as latest_event_time by thewatch_alert_id\
	| eventstats sum(thewatch_artifact_confidence_level) as total_thewatch_artifact_confidence_level, sum(thewatch_enrichment_score) as total_thewatch_enrichment_score by thewatch_event_id\
	| fillnull value=0 total_thewatch_enrichment_score\
	| eval thewatch_tag_name = mvzip(thewatch_tag_name,thewatch_tag_type," - "), thewatch_enrichment_name = mvzip(thewatch_enrichment_type, thewatch_enrichment_description,": ")\
	| fillnull value="-" thewatch_enrichment_name\
	| stats sum(eval(thewatch_nearest_qualification_score*total_thewatch_artifact_confidence_level+total_thewatch_enrichment_score)) as global_score, values(thewatch_nearest_qualification_name) as current_qualifications, values(thewatch_nearest_qualification_id) as thewatch_nearest_qualification_id, values(thewatch_artifact) as thewatch_artifact, values(thewatch_enrichment_name) as thewatch_enrichment_name, count as total by thewatch_alert_id, thewatch_artifact_case_id, thewatch_artifact_tag_id, thewatch_tag_name, earliest_event_time, latest_event_time\
	| sort 0 -latest_event_time\
	`THEWATCH_calculate_alert_severity(global_score)`\
	| lookup thewatch_alerts id as thewatch_alert_id OUTPUTNEW time as thewatch_alert_closed_time user as thewatch_alert_closed_user\
	| eval id = substr(thewatch_alert_id,0,8), status = case(now()-15*60<=latest_event_time AND thewatch_alert_closed_user=="-","ONGOING",global_score==0 AND thewatch_alert_closed_user=="-","CLOSED 🔄", thewatch_alert_closed_user!="-","CLOSED ☑️",1==1,"NEW"), thewatch_evt = relative_time(earliest_event_time,"-1min"), thewatch_lvt = relative_time(latest_event_time,"+1min"), latest_event_time = strftime(latest_event_time,"%Y-%m-%d %H:%M:%S"), thewatch_enrichment_name = if(mvcount(thewatch_enrichment_name)!=1,mvfilter(NOT match(thewatch_enrichment_name,"^\-$")),thewatch_enrichment_name)\
	| table id, thewatch_artifact_case_id, thewatch_nearest_qualification_id, thewatch_alert_id, latest_event_time, status, thewatch_alert_severity, global_score, thewatch_artifact_tag_id, thewatch_tag_name, thewatch_case_name, thewatch_artifact, thewatch_enrichment_name, current_qualifications, total, thewatch_evt, thewatch_lvt
iseval = 0

[THEWATCH_get_detections_by_case_qualification(4)]
args = tag_name, case_name,artifact_value, qualification
definition = `THEWATCH_get_notable_events($tag_name$,$case_name$,$artifact_value$,$qualification$)`\
	| where thewatch_case_aggregation=="case_qualification"\
	| eventstats earliest(_time) as earliest_event_time, latest(_time) as latest_event_time by thewatch_artifact_case_id, thewatch_nearest_qualification_id\
	| eval thewatch_tag_name = mvzip(thewatch_tag_name,thewatch_tag_type," - "), thewatch_enrichment_name = thewatch_enrichment_description+" ("+thewatch_enrichment_type+")"\
	| fillnull value="-" thewatch_enrichment_name\
	| stats values(thewatch_artifact) as thewatch_artifact, values(thewatch_enrichment_name) as thewatch_enrichment_name, count as total by thewatch_artifact_case_id, thewatch_artifact_tag_id, thewatch_tag_name, thewatch_nearest_qualification_id, thewatch_nearest_qualification_name, earliest_event_time, latest_event_time\
	| lookup thewatch_cases id as thewatch_artifact_case_id OUTPUTNEW name as thewatch_case_name\
	| sort 0 -latest_event_time\
	| eval thewatch_evt = relative_time(earliest_event_time,"-1min"), thewatch_lvt = relative_time(latest_event_time,"+1min"), earliest_event_time = strftime(earliest_event_time,"%Y-%m-%d %H:%M:%S"), latest_event_time = strftime(latest_event_time,"%Y-%m-%d %H:%M:%S"), thewatch_enrichment_name = if(mvcount(thewatch_enrichment_name)!=1,mvfilter(NOT match(thewatch_enrichment_name,"^\-$")),thewatch_enrichment_name)\
	| table thewatch_artifact_case_id, thewatch_nearest_qualification_id, thewatch_artifact_tag_id, thewatch_case_name, thewatch_nearest_qualification_name, earliest_event_time, latest_event_time, thewatch_tag_name, thewatch_artifact, thewatch_enrichment_name, total, thewatch_evt, thewatch_lvt
iseval = 0

[THEWATCH_get_detections_by_alert_by_id(4)]
args = tag_id, case_id, filter_artifact_id, qualification
definition = `THEWATCH_get_notable_events_by_id($tag_id$,$case_id$,$filter_artifact_id$,$qualification$)`\
	| where thewatch_case_aggregation=="alert"\
	| eventstats earliest(_time) as earliest_event_time, latest(_time) as latest_event_time by thewatch_alert_id\
	| eventstats sum(thewatch_artifact_confidence_level) as total_thewatch_artifact_confidence_level, sum(thewatch_enrichment_score) as total_thewatch_enrichment_score by thewatch_event_id\
	| fillnull value=0 total_thewatch_enrichment_score\
	| eval thewatch_tag_name = mvzip(thewatch_tag_name,thewatch_tag_type," - "), thewatch_enrichment_name = mvzip(thewatch_enrichment_type, thewatch_enrichment_description,": ")\
	| fillnull value="-" thewatch_enrichment_name\
	| stats sum(eval(thewatch_nearest_qualification_score*total_thewatch_artifact_confidence_level+total_thewatch_enrichment_score)) as global_score, values(thewatch_nearest_qualification_name) as current_qualifications, values(thewatch_nearest_qualification_id) as thewatch_nearest_qualification_id, values(thewatch_artifact) as thewatch_artifact, values(thewatch_enrichment_name) as thewatch_enrichment_name, count as total by thewatch_alert_id, thewatch_artifact_case_id, thewatch_artifact_tag_id, thewatch_tag_name, earliest_event_time, latest_event_time\
	| sort 0 -latest_event_time\
	`THEWATCH_calculate_alert_severity(global_score)`\
	| lookup thewatch_alerts id as thewatch_alert_id OUTPUTNEW time as thewatch_alert_closed_time user as thewatch_alert_closed_user\
	| eval id = substr(thewatch_alert_id,0,8), status = case(now()-15*60<=latest_event_time AND thewatch_alert_closed_user=="-","ONGOING",global_score==0 AND thewatch_alert_closed_user=="-","CLOSED 🔄", thewatch_alert_closed_user!="-","CLOSED ☑️",1==1,"NEW"), thewatch_evt = relative_time(earliest_event_time,"-1min"), thewatch_lvt = relative_time(latest_event_time,"+1min"), latest_event_time = strftime(latest_event_time,"%Y-%m-%d %H:%M:%S"), thewatch_enrichment_name = if(mvcount(thewatch_enrichment_name)!=1,mvfilter(NOT match(thewatch_enrichment_name,"^\-$")),thewatch_enrichment_name)\
	| table id, thewatch_artifact_case_id, thewatch_nearest_qualification_id, thewatch_alert_id, latest_event_time, status, thewatch_alert_severity, global_score, thewatch_artifact_tag_id, thewatch_tag_name, thewatch_case_name, thewatch_artifact, thewatch_enrichment_name, current_qualifications, total, thewatch_evt, thewatch_lvt
iseval = 0

[THEWATCH_search_mail]
definition = ()
iseval = 0

[THEWATCH_search_event_id_ad]
definition = ()
iseval = 0

[THEWATCH_search_file_name]
definition = ()
iseval = 0

[THEWATCH_search_hash]
definition = ()
iseval = 0

[THEWATCH_search_ip]
definition = ()
iseval = 0

[THEWATCH_search_sourcetype]
definition = ()
iseval = 0

[THEWATCH_search_url]
definition = ()
iseval = 0

[THEWATCH_search_user]
definition = ()
iseval = 0

[THEWATCH_search_workstation]
definition = ()
iseval = 0

